# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI - Unit and Robot Tests

# wokflow is triggered on following
on:
  # trigger on push to main
  push:
    branches: [ main ]
  # trigger on new PR to main 
  pull_request:
    branches: [ main ]
  # enables manual triggering
  workflow_dispatch:

jobs:
  run-tests: 
    name: Run Unit and Robot Tests
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13.5"]
        r-version: ["4.5.0"]
        
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up R ${{ matrix.r-version }}
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r-version }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[tests]

    - name: Install R dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        cache-version: 2

    - name: Compile shared libraries
      run: |
        make -C lukefi/metsi/forestry/c

    - name: Test with pytest
      run: |
        python -m pytest --junit-xml=pytest.xml --cov=lukefi --cov-report xml --cov-branch
      
    - name: Run Robot Tests
      run: |
        export PYTHONPATH=${GITHUB_WORKSPACE}
        robot --xunit robottest.xml tests/robot

    - name: Upload testing results
      if: (!cancelled())
      uses: actions/upload-artifact@v4
      with:
        name: Test Results (Python ${{ matrix.python-version }}, R ${{ matrix.r-version}})
        path: |
          coverage.xml
          pytest.xml
          log.html
          report.html
          output.xml
          robottest.xml
          tests/robot/**/output/

    - name: Clean up
      run: |
        make -C lukefi/metsi/forestry/c clean

  
  publish-test-results:
    name: "Publish Test Results"
    needs: run-tests
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: read
      issues: read
    if: (!cancelled())

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            artifacts/**/pytest.xml
            artifacts/**/robottest.xml

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: artifacts/**/coverage.xml
          format: markdown
          output: both
          badge: true
          fail_below_min: true
          hide_complexity: true
          hide_branch_rate: false
          indicators: true
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          path: code-coverage-results.md
